doctype html
html(lang="ja")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title カレンダー
    link(rel="stylesheet", href="chatcalendar.css")
    link(href="https://fonts.googleapis.com/css2?family=Libre+Baskerville&display=swap", rel="stylesheet")
    link(href="https://fonts.googleapis.com/css2?family=Merriweather&display=swap", rel="stylesheet")
  body
    header.header
      button.home(onclick="location.href='/home'") 
          svg(xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6")
            path(d="M11.47 3.841a.75.75 0 0 1 1.06 0l8.69 8.69a.75.75 0 1 0 1.06-1.061l-8.689-8.69a2.25 2.25 0 0 0-3.182 0l-8.69 8.69a.75.75 0 1 0 1.061 1.06l8.69-8.689Z")
            path(d="m12 5.432 8.159 8.159c.03.03.06.058.091.086v6.198c0 1.035-.84 1.875-1.875 1.875H15a.75.75 0 0 1-.75-.75v-4.5a.75.75 0 0 0-.75-.75h-3a.75.75 0 0 0-.75.75V21a.75.75 0 0 1-.75.75H5.625a1.875 1.875 0 0 1-1.875-1.875v-6.198a2.29 2.29 0 0 0 .091-.086L12 5.432Z")
          |ホーム

      button.logout(onclick="location.href='/logout'")
          svg(xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#1f1f1f" class="logoutcontent")
            path(d="M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h280v80H200v560h280v80H200Zm440-160-55-58 102-102H360v-80h327L585-622l55-58 200 200-200 200Z")
        
          |ログアウト
      
      button#prev.prev(type="button") ◀
      button#next.next(type="button") ▶
    
    
    
    div#chatcalendar

    #chatmodal
      button.close(onclick="closeModal()")  ✕
      p#modal-date(style="margin: 0; font-weight: bold;")
      #chatwrite 
      textarea#chat.chat(rows="3", cols="40")
      button#save 送信

    script.
      window.closeModal = function () {
        document.getElementById("chatmodal").style.display = "none";
        chatcalendar.classList.remove('small-chatcalendar');
        document.getElementById('chatcalendar').classList.add('restore')
        chatcalendar.classList.remove('restore');
       

      };

      window.openModal = async function(dateStr) {
        document.getElementById('chatmodal').style.display = 'block';
        document.getElementById('chatcalendar').classList.add('small-chatcalendar')
        const chatHistoryDiv = document.getElementById('chatwrite');
        chatHistoryDiv.innerHTML = '';

        const response = await fetch(`/getchat?date=${dateStr}`);
        const {chat,user} = await response.json();
        

        let htmlContent = '';
        let userclass='';
        if (chat && Array.isArray(chat) && chat.length > 0) {
          chat.forEach(chatwrite => {
            if(chatwrite.postedBy===user.username){
               userclass="myuser";
            }else{
               userclass="othersuser";
            }
            htmlContent += `
            <div class="${userclass}">
              <p> ${new Date(chatwrite.createdAt).toLocaleString()}</p>
              <p class="user">${chatwrite.postedBy}</p>
              <p class="content">${chatwrite.content}</p>
              </div>
              <br>
            `;
          });
        } else {
          htmlContent = '<p>この日のチャットはありません。</p>';
        }

        chatHistoryDiv.innerHTML = htmlContent;
        requestAnimationFrame(() => {
          chatHistoryDiv.scrollTop = chatHistoryDiv.scrollHeight;
            });

        document.getElementById('modal-date').innerText = dateStr;
      };

      document.getElementById("save").addEventListener("click", async () => {
        console.log('送信ボタンがクリックされました！');
        const chatsave = document.getElementById('chat').value;
        const dateStr = document.getElementById('modal-date').innerText;

        const res = await fetch('/savechat', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            date: dateStr,
            chat: chatsave
          })
        });

        if (res.ok) {
          alert('送信しました');
          await window.openModal(dateStr);
          document.getElementById('chat').value = '';
          const td=document.querySelector(`td[data-date="${dateStr}"]`);
          if(td){
            td.style.backgroundColor='rgb(23, 242, 198)';
          }
        } else {
          alert('送信に失敗しました');
        }
      });

    script(src="chatcalendar.js")
